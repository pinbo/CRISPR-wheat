<tool id="Get_gRNA" name="gRNAs from Wheat Homeologs">
  <description>for homeolog sequences in a fasta file</description>
  <command>/usr/local/bin/python '$__tool_directory__/bin/get_guide_RNA.py' -i $input -t $targets -p $pam -o selected_gRNAs.txt -b $blast</command>
  
  <inputs>
    <param format="fasta" name="input" type="data" label="Homeolog sequences (a fasta file with all the homeolog sequences)"/>
    <param name="targets" size="100" type="text" value="ALL" label="gRNA target sequence name(s) (Separated with commas, for example, GW2A,GW2B ). Default targeting all sequences!"/>
    <param name="pam" type="select" label="PAM sequence" help="Default NGG">
        <option value="NGG">NGG</option>
    </param>
    <param name="blast" type="select" label="Blast the output gRNAs in the wheat genome?" help="If yes, will blast against Chinese_Spring_v1.0_pseudomolecules">
        <option value="0">No</option>
	    <option value="1">Yes</option>
    </param>
  </inputs>

  <outputs>
	  <data format="tabular" name="gRNA" from_work_dir="selected_gRNAs.txt" label="${tool.id} output"/>
	  <data format="tabular" name="blast_out" from_work_dir="blast_out.txt" label="${tool.id} BLAST output"/>
  </outputs>

  <help>

**OVERVIEW**

Design group specific guide RNAs (gRNAs) in wheat. You can set the targeting chromosomes, so the gRNAs are only target these chromosomes.

------

**Input**

A fasta file with all the homeolog sequences. Both cDNA and genomic DNA sequences are okay, but I would recommend cDNAs.

**Parameters**

1. targets: default value is "ALL" (have to be capital), means to design gRNAs targeting all the sequences in the input file. If your input file have 3 sequences named as gene-1A, gene-1B, gene-1D, you can set the value to "gene-1A,gene-1B" (no quotes, and NO space after ",") to design gRNAs specific to only 1A and 1B homeologs.

2. PAM: choose the PAM type. Will add more types later.

3. BLAST: whether to blast the selected gRNAs against the genome to look for potential off-targets. If yes, will blast, and output the off-target scores (0 to 1, 0 is not possible at all, 1 is perfect match) of the first 4 best hits.

------

**Output**

**ID**: gRNA sequence ID

**Start**: start position on the template

**End**: end position on the template

**Strand**: forward or reverse strand of the template

**Length**: length of the gRNAs

**Sequence (5' -> 3')**: gRNA 5' -> 3'sequence without PAM

**GC_content_All**: GC content of the whole gRNA sequence

**GC_content_first_10nt**: GC content of the first 10nts from the PAM of the whole gRNA sequence

**Reverse Complement (5' -> 3')**: Reverse complement sequence of the gRNAs

**PAM**: PAM sequence on the template

**Template used**: the sequence that was used to search for potential gRNAs

**On_target_score**: on target score based on human study. May not help much for wheat.

**Restriction Enzyme**: restriction enzyme sites that may be destroyed by the deletion.

**Off target score of BLAST top 4 hits**: top 4 blast hits and their off target scores based on human study. I think this would help, because it seems to be consistent with rules to check mismatches.

**Example output:**

ID	Start	End	Strand	Length	Sequence (5' -> 3')	GC_content_All	GC_content_first_10nt	Reverse Complement (5' -> 3')	PAM	Template used	On_target_score	Restriction Enzyme	Off target score of BLAST top 4 hits

gRNA_381_Forward	362	381	Forward	20	TGCTGTTCCAGCAACTAGGC	55	60	GCCTAGTTGCTGGAACAGCA	AGG	gene-1A	0.43	BfaI,142,ctag	chr1A: 1.0; chr1B: 1.0; chr1D: 1.0; chr4B: 0.5; 


------

For more information go to : https://github.com/pinbo/CRISPR-wheat
  </help>

</tool>
